name: Build & Test

on:
  push:
    branches:
      - main
    paths-ignore:
      - 'website/**'
      - 'fastlane/**'
      - 'assets/**'
      - '**/*.md'
  pull_request:
    branches:
      - main

jobs:
  build:

    # run on macOS to use Skiko mac for credits checks
    runs-on: macos-latest
    permissions:
        contents: read
        checks: write
        id-token: write

    steps:
    - uses: actions/checkout@v4

    - name: ‚òï Setup JDK 21
      uses: actions/setup-java@v4
      with:
        java-version: '21'
        distribution: 'adopt'

    - name: üêò Setup Gradle
      uses: gradle/actions/setup-gradle@v4
      with:
        add-job-summary-as-pr-comment: on-failure

    - name: üîì Decrypt secrets
      env:
        PLAYSTORE_SECRET_PASSPHRASE: ${{ secrets.PLAYSTORE_SECRET_PASSPHRASE }}
      run: ./_ci/decrypt_secrets.sh

    - name:  ¬©Ô∏è Generate credits for ':tasks-app-desktop'
      run: |
            ./gradlew --no-daemon :tasks-app-desktop:exportLibraryDefinitions -PaboutLibraries.exportPath=src/main/resources
            stale_credits=$(git diff tasks-app-desktop/src/main/resources/licenses_desktop.json)
            # TODO if/once made reliable, would be nice to publish a PR comment to state about the status
            if [ -n "${stale_credits}" ]; then ./_ci/generate_github_comment_stale_credits.sh ":tasks-app-desktop" >> "${GITHUB_STEP_SUMMARY}"; fi

    - name: üî® Build Desktop App üñ•Ô∏è
      run: |
            ./gradlew --no-daemon :tasks-app-desktop:assemble

    - name:  ¬©Ô∏è Generate credits for ':tasks-app-android'
      run: |
            ./gradlew --no-daemon :tasks-app-android:exportLibraryDefinitions -PaboutLibraries.exportPath=src/main/assets
            stale_credits=$(git diff tasks-app-android/src/main/assets/licenses_android.json)
            # TODO if/once made reliable, would be nice to publish a PR comment to state about the status
            if [ -n "${stale_credits}" ]; then ./_ci/generate_github_comment_stale_credits.sh ":tasks-app-android" >> "${GITHUB_STEP_SUMMARY}"; fi

    - name: üî® Build Android App üì±
      env:
        PLAYSTORE_SECRET_PASSPHRASE: ${{ secrets.PLAYSTORE_SECRET_PASSPHRASE }}
        KEYSTORE_PASSWORD: ${{ secrets.KEYSTORE_PASSWORD }}
        KEYSTORE_KEY_PASSWORD: ${{ secrets.KEYSTORE_KEY_PASSWORD }}
      run: |
            ./gradlew --no-daemon :tasks-app-android:assembleStoreRelease \
              -Pci=true \
              -Pplaystore.keystore.file="${PWD}/_ci/tasksApp.keystore" \
              -Pplaystore.keystore.password="${KEYSTORE_PASSWORD}" \
              -Pplaystore.keystore.key_password="${KEYSTORE_KEY_PASSWORD}"

    # `test` to trigger as much Jvm tests as possible
    # `:tasks-app-android:testStoreReleaseUnitTest` to restrict to only specific flavor(store)+variant(release) for `:tasks-app-android` module.
    # `-x :tasks-app-android:test` to remove all tests from `:tasks-app-android` module not being covered by `:tasks-app-android:testStoreReleaseUnitTest`.
    # `-x testDebugUnitTest` to avoid triggering tests both in debug & release build.
    # `-x :tasks-app-android:build` to avoid triggering useless build tasks (typically for unused flavors).
    #      Only rely on dependencies of `:tasks-app-android:testStoreReleaseUnitTest`.
    - name: ‚úÖ Test
      run: |
            ./gradlew --no-daemon test :tasks-app-android:testStoreReleaseUnitTest \
            -x :tasks-app-android:test -x testDebugUnitTest -x :tasks-app-android:build

    - name: üóíÔ∏è Publish Test Reports
      uses: mikepenz/action-junit-report@v4
      if: success() || failure()
      with:
        report_paths: '**/build/test-results/test/TEST-*.xml'
